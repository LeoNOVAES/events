{"remainingRequest":"/home/leandro/events/client/node_modules/babel-loader/lib/index.js!/home/leandro/events/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/leandro/events/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/leandro/events/client/src/components/Cadastro.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/leandro/events/client/src/components/Cadastro.vue","mtime":1568681867874},{"path":"/home/leandro/events/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leandro/events/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/leandro/events/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leandro/events/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/leandro/events/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    api: api\n  },\n  props: {\n    handlerComponent: ''\n  },\n  data: function data() {\n    return {\n      validation: 0,\n      form: {\n        email: \"\",\n        password: \"\",\n        phone: \"\",\n        name: \"\"\n      }\n    };\n  },\n  methods: {\n    handlerRegister: function () {\n      var _handlerRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(!this.$data.form.password || !this.$data.form.email || !this.$data.form.phone || !this.$data.form.name)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$data.validation = 1);\n\n              case 3:\n                _context.next = 5;\n                return api.post(\"/user\", this.$data.form);\n\n              case 5:\n                response = _context.sent;\n                this.$swal({\n                  title: response.data.message,\n                  text: \"Aguarde...\",\n                  type: 'warning',\n                  confirmButtonColor: '#DF4723'\n                });\n                setInterval(function () {}, 5000);\n                this.handlerLogin();\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.$swal({\n                  title: \"usu치rio j치 existe!\",\n                  type: 'warning',\n                  confirmButtonColor: '#DF4723'\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function handlerRegister() {\n        return _handlerRegister.apply(this, arguments);\n      }\n\n      return handlerRegister;\n    }(),\n    handlerLogin: function () {\n      var _handlerLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  email: this.$data.form.email,\n                  password: this.$data.form.password\n                };\n                _context2.next = 3;\n                return api.post(\"/auth\", data);\n\n              case 3:\n                response = _context2.sent;\n                localStorage.setItem(\"token\", response.data.token);\n                localStorage.setItem(\"id\", response.data.user._id);\n                localStorage.setItem(\"nome\", response.data.user.name);\n                location.href = \"#/home\";\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handlerLogin() {\n        return _handlerLogin.apply(this, arguments);\n      }\n\n      return handlerLogin;\n    }()\n  }\n};",{"version":3,"sources":["Cadastro.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,GAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAJA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA;AAJA;AAFA,KAAA;AASA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAIA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,IAJA;AAAA;AAAA;AAAA;;AAAA,iDAKA,KAAA,KAAA,CAAA,UAAA,GAAA,CALA;;AAAA;AAAA;AAAA,uBAOA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAPA;;AAAA;AAOA,gBAAA,QAPA;AASA,qBAAA,KAAA,CAAA;AACA,kBAAA,KAAA,EAAA,QAAA,CAAA,IAAA,CAAA,OADA;AAEA,kBAAA,IAAA,EAAA,YAFA;AAGA,kBAAA,IAAA,EAAA,SAHA;AAIA,kBAAA,kBAAA,EAAA;AAJA,iBAAA;AAOA,gBAAA,WAAA,CAAA,YAAA,CAEA,CAFA,EAEA,IAFA,CAAA;AAIA,qBAAA,YAAA;AApBA;AAAA;;AAAA;AAAA;AAAA;AAuBA,gBAAA,OAAA,CAAA,GAAA;AACA,qBAAA,KAAA,CAAA;AACA,kBAAA,KAAA,EAAA,oBADA;AAEA,kBAAA,IAAA,EAAA,SAFA;AAGA,kBAAA,kBAAA,EAAA;AAHA,iBAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgCA,IAAA,YAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,gBAAA,IAjCA,GAiCA;AACA,kBAAA,KAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AAFA,iBAjCA;AAAA;AAAA,uBAsCA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAtCA;;AAAA;AAsCA,gBAAA,QAtCA;AAuCA,gBAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,gBAAA,YAAA,CAAA,OAAA,CAAA,IAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,gBAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlBA,CAAA","sourcesContent":["<style scoped>\n.cadastro-container{\n    height: 100%;\n    display:flex;\n    justify-content: center;\n    align-items: center\n}\n\n.cadastro-container form{\n    width: 100%;\n    max-width: 300px;\n    display: flex;\n    flex-direction: column\n}\n\n.cadastro-container form input{\n    margin-top: 20px;\n    height: 40px;\n    padding:0 20px;\n    font-size: 16px;\n    color:#a0a0a0;\n    background-color:#3F3F3F;\n    border:1px solid #a0a0a0 !important;\n    border-radius: 4px \n\n}\n\n.cadastro-container form input::placeholder{\n    color:#999\n}\n\n\n.cadastro-container form button{\n    margin-top:10px;\n    border: 0;\n    border-radius: 4px;\n    height: 48px;\n    font-size: 16px;\n    background-color: #DF4723;\n    color:#ffffff;\n    cursor: pointer;\n\n}\n\n.cadastro-container form p{\n    padding-top:5px; \n    font-size:15pt; \n    color:#e9e9e9\n}\n#validation{\n    background-color: #DF4723;\n    padding:10px;\n    border-radius: 7px;\n    margin:10px;\n    color:#ffffff\n}\n</style>\n\n<template>\n    <div class=\"cadastro-container\" >\n        <form>\n            <img src=\"../../public/assets/logo.png\" width=\"100px\" alt=\"events\"/>\n            <div id=\"validation\" v-if=\"validation\">\n                Todos os campos devem estar preenchidos\n            </div>\n            <input type=\"text\" v-model=\"form.email\" placeholder=\"E-mail\" />\n            <input type=\"text\" v-model=\"form.name\" placeholder=\"Nome\" />\n            <input type=\"password\" v-model=\"form.password\" placeholder=\"Senha\" />\n            <input type=\"number\" v-model=\"form.phone\" placeholder=\"Telefone\" />\n            <button @click=\"handlerRegister\">Cadastrar</button>\n            <p @click=\"handlerComponent\" style=\"cursor:pointer\" >VOLTAR</p>\n        </form>\n    </div>\n</template>\n\n<script>\nimport api from \"@/services/api\";\n\nexport default{\n   components:{\n       api\n   }, \n   props:{\n       handlerComponent:''\n   },\n    data(){\n       return{\n           validation:0,\n           form:{\n               email:\"\",\n               password:\"\",\n               phone:\"\",\n               name:\"\"\n           }\n       } \n   },\n   methods:{\n       async handlerRegister(){\n           try{\n               \n                if(!this.$data.form.password || !this.$data.form.email || !this.$data.form.phone || !this.$data.form.name){\n                    return this.$data.validation = 1;\n                } \n                const response = await api.post(\"/user\", this.$data.form);   \n                \n                this.$swal({\n                    title:response.data.message,\n                    text:\"Aguarde...\",\n                    type: 'warning',\n                    confirmButtonColor: '#DF4723'\n                });\n\n                setInterval(()=>{\n\n                },5000);\n                \n                this.handlerLogin();\n\n            }catch(e){\n               console.log(e)\n               this.$swal({\n                    title:\"usu치rio j치 existe!\",\n                    type: 'warning',\n                    confirmButtonColor: '#DF4723'\n                });\n           }\n       },\n\n       async handlerLogin(){\n             const data = {\n                email:this.$data.form.email,\n                password:this.$data.form.password\n            }\n    \n            const response = await api.post(\"/auth\", data);\n            localStorage.setItem(\"token\", response.data.token)\n            localStorage.setItem(\"id\", response.data.user._id);\n            localStorage.setItem(\"nome\", response.data.user.name);\n            location.href = \"#/home\";\n       }\n   }\n    \n}\n</script>\n\n"],"sourceRoot":"src/components"}]}